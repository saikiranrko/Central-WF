name: Add Tag Deployment Rule

on:
  workflow_dispatch:
    inputs:
      environment_name:
        description: 'Environment name'
        required: true
      repository:
        description: 'Repository name (format: owner/repo)'
        required: true
      tag_pattern:
        description: 'Tag pattern (e.g., refs/tags/v*, refs/tags/release-*)'
        required: true

jobs:
  add-deployment-rule:
    runs-on: ubuntu-latest
    steps:
      - name: Add tag deployment rule
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "Starting deployment rule update for environment: ${{ github.event.inputs.environment_name }}"
          
          # Get current deployment branch rules
          echo "Fetching current deployment rules..."
          RULES=$(gh api \
            repos/${{ github.event.inputs.repository }}/environments/${{ github.event.inputs.environment_name }}/deployment-branch-policies \
            --jq '.branch_policies')
          
          echo "Current rules: $RULES"
          
          # Create new tag rule
          TAG_RULE=$(jq -n --arg pattern "${{ github.event.inputs.tag_pattern }}" '{
            "name": $pattern,
            "type": "tag"
          }')
          
          echo "New tag rule: $TAG_RULE"
          
          # Combine existing rules with new tag rule
          UPDATED_RULES=$(echo "$RULES" | jq --argjson new_rule "$TAG_RULE" '. + [$new_rule]')
          
          echo "Updated rules: $UPDATED_RULES"
          
          # Create the complete payload
          PAYLOAD=$(jq -n --argjson rules "$UPDATED_RULES" '{
            "branch_policies": $rules
          }')
          
          # Update environment deployment rules using the correct API endpoint
          RESPONSE=$(gh api \
            --method PUT \
            "repos/${{ github.event.inputs.repository }}/environments/${{ github.event.inputs.environment_name }}/deployment-branch-policies" \
            -H "Accept: application/vnd.github.v3+json" \
            --input - <<< "$PAYLOAD")
          
          if [ $? -eq 0 ]; then
            echo "Successfully updated deployment rules"
            echo "Response: $RESPONSE"
          else
            echo "Error updating deployment rules: $RESPONSE"
            exit 1
          fi
