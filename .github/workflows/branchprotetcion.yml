name: Add Branch Protection for Pattern
on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repository name (owner/repo)"
        required: true
      branch_pattern:
        description: "Branch pattern to apply protection (e.g., release/*)"
        required: true
jobs:
  set-branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Apply Branch Protection for Pattern
        env:
          AUTH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Parse inputs
          owner=$(echo "${{ github.event.inputs.repo }}" | cut -d'/' -f1)
          repo=$(echo "${{ github.event.inputs.repo }}" | cut -d'/' -f2)
          branch_pattern="${{ github.event.inputs.branch_pattern }}"
          
          # Fetch repository ID
          echo "Fetching repository ID for $owner/$repo..."
          repo_id=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$owner/$repo" | jq -r .node_id)
          
          if [ -z "$repo_id" ] || [ "$repo_id" = "null" ]; then
            echo "Error: Failed to fetch repository ID. Please check the repository name or token permissions."
            exit 1
          fi
          
          # Create GraphQL mutation
          read -r -d '' QUERY << 'GRAPHQL'
          mutation($repositoryId: ID!, $pattern: String!) {
            createBranchProtectionRule(input: {
              repositoryId: $repositoryId,
              pattern: $pattern,
              requiresApprovingReviews: true,
              requiredApprovingReviewCount: 2,
              dismissesStaleReviews: true,
              requiresCodeOwnerReviews: true,
              isAdminEnforced: true,
              allowsForcePushes: false,
              allowsDeletions: false
            }) {
              branchProtectionRule {
                id
                pattern
              }
            }
          }
          GRAPHQL
          
          # Create request body
          json_body=$(jq -n \
            --arg query "$QUERY" \
            --arg repo_id "$repo_id" \
            --arg pattern "$branch_pattern" \
            '{
              query: $query,
              variables: {
                repositoryId: $repo_id,
                pattern: $pattern
              }
            }')
          
          # Execute GraphQL mutation
          echo "Applying branch protection rules for pattern '$branch_pattern'..."
          curl -X POST \
            -H "Authorization: Bearer $AUTH_TOKEN" \
            -H "Content-Type: application/json" \
            https://api.github.com/graphql \
            -d "$json_body"
          
          echo "Branch protection rules applied for branch pattern '$branch_pattern' in repo $owner/$repo."
