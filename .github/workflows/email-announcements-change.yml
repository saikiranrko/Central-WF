name: Announcement for Change
run-name: "Announcement for Change # ${{ inputs.change_id }}"
on:
  workflow_dispatch:
    inputs:
      test_email:
        type: boolean
        required: true
        default: true
        description: 'Send a test email to the specified test email'
      change_id:
        type: string
        required: false
        default: 'CHG-123'
        description: 'ID of the change'
      to:
        type: string
        required: true
        description: 'Recipients (comma-separated emails)'   
      bcc:
        type: string
        required: false
        default: ''
        description: 'BCC recipients (comma-separated emails)'     
      change:
        type: string
        required: true
        description: 'Change description'
      change_window:
        type: string
        required: true
        description: 'Time window for the change'   
      impact:
        type: string
        required: true
        description: 'Impact of the change'      
      change_summary:
          type: string
          required: true
          description: 'Summary of the change'
      action_needed:
          type: string
          required: true
          description: 'Actions needed from recipients' 
      note:
          type: string
          required: true
          description: 'Additional notes'    
      
jobs:
  Make-Announcements:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3 
        
      - name: Announcement for Change
        id: set-template
        run: |  
            echo "The workflow was triggered by ${{ github.actor }}"
            
            # Create files with multiline content preserved
            echo '${{ inputs.impact }}' > impact.txt
            echo '${{ inputs.change }}' > change.txt
            echo '${{ inputs.change_window }}' > change_window.txt
            echo '${{ inputs.change_summary }}' > change_summary.txt
            echo '${{ inputs.action_needed }}' > action_needed.txt
            echo '${{ inputs.note }}' > note.txt
            
            # Read the content with newlines preserved
            impact=$(cat impact.txt)
            change=$(cat change.txt)
            change_window=$(cat change_window.txt)
            change_summary=$(cat change_summary.txt)
            action_needed=$(cat action_needed.txt)
            note=$(cat note.txt)
            
            # Debug
            echo "Debug - Impact content:"
            echo "$impact" | cat -A  # Show special chars
            
            # Pass to Python script with quotes to preserve spaces and newlines
            python set-email-change-template.py \
              "${{ inputs.to }}" \
              "$change" \
              "$change_window" \
              "$impact" \
              "$change_summary" \
              "$action_needed" \
              "$note"
      
      - name: Send test Mail 
        if: ${{ inputs.test_email == true }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Platform DevOps Automated Notification - ${{ inputs.change_id }}
          html_body: file://${{ github.workspace }}/email.html
          to: saikiran9487@gmail.com
          from: ${{ secrets.SMTP_USERNAME }}
          attachments: logo.JPG
      
      - name: Send Template Mail 
        if: ${{ inputs.test_email == false }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Platform DevOps Automated Notification - ${{ inputs.change_id }}
          html_body: file://${{ github.workspace }}/email.html
          to: ${{ inputs.to }}
          from: ${{ secrets.SMTP_USERNAME }}
          bcc: ${{ inputs.bcc }}
          attachments: logo.JPG
          
      - name: Github Step Summary
        run: |
          echo "Change: ${{ inputs.change }}" >> $GITHUB_STEP_SUMMARY
          echo "Recipients: ${{ inputs.to }}" >> $GITHUB_STEP_SUMMARY
          echo "Change window: ${{ inputs.change_window }}" >> $GITHUB_STEP_SUMMARY
      
      - name: Clean Workspace
        run: |
          rm -f email.html impact.txt change.txt change_window.txt change_summary.txt action_needed.txt note.txt
          echo "Workspace cleared for run ID ${{ github.run_number }}"
