name: AAdd Branch Protection Rules to Repository (Local Testing)

run-name: "Adding Branch Protection Rules - [ '${{ github.event.inputs.repository }}' | branch '${{ github.event.inputs.branchName }}' ]"

on:
  workflow_dispatch:
    inputs:
      repository:
        type: string
        required: true
        description: 'Target repository for branch protection rules'
      branchname:
        type: string
        required: true
        description: 'Branch name, excluding "master", "rel", "Hot", and "main"'
      required_approving_review_count:
        type: number
        required: true
        default: 2

jobs:
  CHECK_BRANCH_IF_EXISTS:
    runs-on: ubuntu-latest # Use Ubuntu for local testing
    steps:
      - name: Set Up Environment
        run: |
          echo "Setting up environment variables"
          echo "Repository: ${{ github.event.inputs.repository }}"
          echo "Branch Name: ${{ github.event.inputs.branchname }}"
          echo "Approving Review Count: ${{ github.event.inputs.required_approving_review_count }}"

      - name: Check Collaborator Access
        id: check_admin_access
        run: |
          echo "Checking if user has admin access to repository: ${{ github.event.inputs.repository }}"
          echo "Simulating admin access for local run"
          # Simulated admin check; replace with actual API call in production
          ACTOR_ROLE="admin"
          echo "Role: $ACTOR_ROLE"

          if [[ "$ACTOR_ROLE" != "admin" ]]; then
            echo "You do not have permission to add branch protection rules."
            exit 1
          fi

      - name: Check Branch Existence
        id: branchname_check
        run: |
          echo "Validating branch name: ${{ github.event.inputs.branchname }}"
          if [[ "${{ github.event.inputs.branchname }}" =~ ^(master|rel|Hot|main)$ ]]; then
            echo "Branch '${{ github.event.inputs.branchname }}' is excluded."
            exit 1
          fi

          echo "Simulating branch existence check for branch: ${{ github.event.inputs.branchname }}"
          # Simulated branch check; replace with actual API call in production
          BRANCH_EXISTS=true

          if [[ "$BRANCH_EXISTS" != true ]]; then
            echo "Branch '${{ github.event.inputs.branchname }}' does not exist in repository '${{ github.event.inputs.repository }}'."
            exit 1
          fi

      - name: Add Branch Protection Rules
        run: |
          echo "Adding branch protection rules for branch: ${{ github.event.inputs.branchname }}"
          echo "Simulating branch protection rule application"
          
          if [[ ${{ github.event.inputs.required_approving_review_count }} -lt 1 ]]; then
            echo "Required approving review count must be at least 1."
            exit 1
          fi

          echo "Branch protection rules applied successfully with:"
          echo "- Required Approving Reviews: ${{ github.event.inputs.required_approving_review_count }}"
          echo "- Admin enforcement enabled"
          echo "- Force pushes and deletions disabled"

      - name: Complete Workflow
        run: echo "Branch protection rules have been successfully applied!"
