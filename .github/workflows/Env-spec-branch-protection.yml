name: Configure Environment Deployment Rules

on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repository name (owner/repo)"
        required: true
      environment:
        description: "Environment name"
        required: true
      deployment_rule:
        description: "Deployment rule type (no_restriction, protected_branches, selected)"
        required: true
        default: 'no_restriction'
      branch_patterns:
        description: "Branch/tag patterns (comma-separated, required for 'selected' type)"
        required: false
        default: ''

jobs:
  configure-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Configure Environment Deployment Rules
        env:
          AUTH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          owner=$(echo "${{ github.event.inputs.repo }}" | cut -d'/' -f1)
          repo=$(echo "${{ github.event.inputs.repo }}" | cut -d'/' -f2)
          env_name="${{ github.event.inputs.environment }}"
          rule_type="${{ github.event.inputs.deployment_rule }}"
          patterns="${{ github.event.inputs.branch_patterns }}"
          
          # Get environment ID
          echo "Fetching environment ID for $env_name..."
          env_response=$(curl -s \
            -H "Authorization: Bearer $AUTH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$owner/$repo/environments/$env_name")
          
          env_id=$(echo "$env_response" | jq -r '.id')
          if [ -z "$env_id" ] || [ "$env_id" = "null" ]; then
            echo "Error: Environment not found"
            exit 1
          fi

          # Log environment details
          echo "Environment details:"
          echo "$env_response" | jq '.'

          # Prepare deployment rules based on type
          case "$rule_type" in
            "no_restriction")
              deployment_rules='{
                "deployment_branch_policy": {
                  "protected_branches": false,
                  "custom_branch_policies": false
                }
              }'
              ;;
            
            "protected_branches")
              deployment_rules='{
                "deployment_branch_policy": {
                  "protected_branches": true,
                  "custom_branch_policies": false
                }
              }'
              ;;
            
            "selected")
              if [ -z "$patterns" ]; then
                echo "Error: Branch patterns required for 'selected' type"
                exit 1
              fi
              echo "Branch patterns provided: $patterns"
              deployment_rules='{
                "deployment_branch_policy": {
                  "protected_branches": false,
                  "custom_branch_policies": true
                }
              }'
              ;;
            
            *)
              echo "Error: Invalid deployment rule type"
              exit 1
              ;;
          esac
          
          # Update environment settings
          echo "Updating environment deployment rules..."
          response=$(curl -s -X PUT \
            -H "Authorization: Bearer $AUTH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/$owner/$repo/environments/$env_name" \
            -d "$deployment_rules")
          
          if echo "$response" | jq -e '.message' >/dev/null; then
            echo "Error updating environment:"
            echo "$response" | jq '.message'
            exit 1
          fi
          
          echo "Successfully updated deployment rules for environment '$env_name'"
          echo "Configuration:"
          echo "$response" | jq '.'
